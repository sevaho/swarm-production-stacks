defaults
    mode http
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms

frontend proxy_http_mode_http
    # this will rate limit port 80
    bind *:80
    mode http

    # ACL function declarations
    acl is_abuse src_http_req_rate(Abuse) ge 10  
    acl inc_abuse_cnt src_inc_gpc0(Abuse) gt 0   
    acl abuse_cnt src_get_gpc0(Abuse) gt 0       

    # Rules
    tcp-request connection track-sc0 src table Abuse
    tcp-request connection reject if abuse_cnt

    # Returns a 403 to the abuser and flags for tcp-reject next time
    http-request deny if abuse_cnt
    http-request deny if is_abuse inc_abuse_cnt

    # redirect http to https
    # redirect scheme https code 301 if !{ ssl_fc }
    use_backend backend_http

frontend monitoring
  bind *:9090
  no log
  stats uri /
  stats enable

frontend proxy_https_mode_tcp
    # this will rate limit port 443
    bind *:443
    mode tcp
    option tcplog

    # ACL function declarations
    acl is_abuse src_http_req_rate(Abuse) ge 10  
    acl inc_abuse_cnt src_inc_gpc0(Abuse) gt 0   
    acl abuse_cnt src_get_gpc0(Abuse) gt 0       

    # Rules
    tcp-request connection track-sc0 src table Abuse
    tcp-request connection reject if abuse_cnt

    # Returns a 403 to the abuser and flags for tcp-reject next time
    http-request deny if abuse_cnt
    http-request deny if is_abuse inc_abuse_cnt
    # log global
    maxconn 10000


    use_backend backend_https
    
backend backend_http
    balance roundrobin
    # server traefik traefik:80
    mode http

backend backend_https
    balance roundrobin

    # option ssl-hello-chk
    # server traefik traefik:443
    # check
    mode tcp

backend Abuse
    stick-table type ip size 100K expire 30m store gpc0,http_req_rate(10s)
